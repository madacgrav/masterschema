{
    "title": "All Environments",
    "description": "A master schema for IaC Solutions (Bicep and Terraform)",
    "type": "object",
    "properties": {
        "resource_group": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the resource group in the cloud provider"
                },
                "subscriptionName": {
                    "type": "string",
                    "description": "Name of the subscription in the cloud provider"
                }
            },
            "required": [
                "name",
                "subscriptionName"
            ]
        },
        "storage_accounts": {
            "type": "array",
            "description": "",
            "items": {
                "$ref": "#/$defs/storage_account"
            },
            "uniqueItems": true
        },
        "blob_services": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/blob_service"
            },
            "uniqueItems": true
        },
        "storage_containers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/storage_container"
            },
            "uniqueItems": true
        },
        "keyvaults": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/keyvault"
            },
            "uniqueItems": true
        },
        "mssql_databases": {
            "type": "array",
            "description": "",
            "items": {
                "$ref": "#/$defs/mssql_database"
            },
            "uniqueItems": true
        },
        "mssql_servers": {
            "type": "array",
            "description": "",
            "items": {
                "$ref": "#/$defs/mssql_server"
            },
            "uniqueItems": true
        }
    },
    "$defs": {
        "mssql_database": {
            "type": "object",
            "description": "",
            "properties": {
                "name": {
                    "type": "string",
                    "description": ""
                },
                "max_size_gb": {
                    "type": "integer",
                    "description": ""
                },
                "sku_name": {
                    "type": "string",
                    "enum": [
                        "S2",
                        "P1"
                    ]
                }
            }
        },
        "mssql_server": {
            "description": "",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "."
                },
                "azuread_administrator" : {
                    "login_username" : {
                        "type" : "string",
                        "description": ""
                    },
                    "object_id" : {
                        "type" : "string",
                        "description": ""
                    }
                },
                "firewall_rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/firewall_rule"
                    },
                    "uniqueItems": true
                },
                "administrator_login_username" : {
                    "type" : "string",
                    "description": ""
                },
                "administrator_login_password" : {
                    "type" : "string",
                    "description": ""
                }
            },
            "required": [
                "name"
            ]
        },
        "keyvault": {
            "type": "object",
            "description": "",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the keyvault."
                },
                "sku_name": {
                    "type": "string",
                    "description": "The Name of the SKU used for this Key Vault. Possible values are standard and premium.",
                    "enum": [
                        "standard",
                        "premium"
                    ]
                },
                "networkAcls" : {
                    "type": "object",
                    "properties" : {
                        "bypass" : {
                            "type": "string",
                            "description": "The bypass",
                            "enum": [
                                "AzureServices",
                                "None"
                            ]
                        },
                        "defaultAction" : {
                            "type": "string",
                            "description": "The default action",
                            "enum": [
                                "Allow",
                                "Deny"
                            ]
                        },
                        "ipRules" : {
                            "type":"array",
                            "items": {
                                "type":"string",
                                "description": "IP Address in CIDR format",
                                "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}($|/[1-9]$|/[1-2][0-9]$|/3[0-2]$)",
                                "uniqueItems": true
                            }
                        },
                        "virtualNetworkRules" : {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "action" : {
                                        "type": "string",
                                        "description": "The action",
                                        "enum": [
                                            "Allow",
                                            "Deny"
                                        ]
                                    },
                                    "virtualNetworkResourceId" : {
                                        "type": "string",
                                        "description": "The virtual network resource ID"
                                    }
                                }
                            }
                        }
                    }
                },
                "access_policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/access_policy"
                    },
                    "uniqueItems": true
                }
            },
            "required": [
                "name",
                "sku_name",
                "networkAcls",
                "access_policies"
            ]
        },
        "storage_account": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "pattern": "(?=.{3,24}$)^[a-z0-9]+$",
                    "description": "Name of the storage account in the cloud provider"
                },
                "sku": {
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The name of the SKU"
                        }
                    }
                },
                "kind": {
                    "type": "string",
                    "description": "The Kind of the storage account",
                    "enum": [
                        "BlobStorage",
                        "BlockBlobStorage",
                        "FileStorage",
                        "Storage",
                        "StorageV2"
                    ]
                },
                "extendedLocation": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The name of the extended location"
                        },
                        "type": {
                            "type": "string",
                            "description": "The type of the extended location"
                        }
                    }
                },
                "accessTier": {
                    "type": "string",
                    "default": "Hot",
                    "description": "The access tier of the storage account",
                    "enum": [
                        "Hot",
                        "Cool",
                        "Premium"
                    ]
                },
                "allowBlobPublicAccess": {
                    "type": "boolean",
                    "description": "Allow or disallow public access to all blobs or containers in the storage account"
                },
                "allowSharedKeyAccess": {
                    "type": "boolean",
                    "description": "Allow or disallow shared key access"
                },
                "azureFilesIdentityBasedAuthentication": {
                    "type": "object",
                    "properties": {
                        "activeDirectoryProperties": {
                            "type": "object",
                            "properties": {
                                "domainName": {
                                    "type": "string",
                                    "description": "The domain name"
                                },
                                "netBiosDomainName": {
                                    "type": "string",
                                    "description": "The net bios domain name"
                                },
                                "forestName": {
                                    "type": "string",
                                    "description": "The resource forest"
                                },
                                "domainGuid": {
                                    "type": "string",
                                    "description": "The SID"
                                },
                                "domainSid": {
                                    "type": "string",
                                    "description": "The tenant ID"
                                },
                                "azureStorageSid": {
                                    "type": "string",
                                    "description": "The user display name"
                                }
                            }
                        },
                        "directoryServiceOptions": {
                            "type": "string",
                            "description": "The directory service options",
                            "enum": [
                                "None",
                                "AADDS"
                            ]
                        },
                        "defaultSharePermission": {
                            "type": "string",
                            "description": "The default share permission",
                            "enum": [
                                "None",
                                "Read",
                                "Write",
                                "Delete"
                            ]
                        }
                    }
                },
                "customDomain": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The custom domain name"
                        },
                        "useSubDomainName": {
                            "type": "boolean",
                            "description": "Use sub domain name"
                        }
                    }
                },
                "defaultToOAuthAuthentication": {
                    "type": "boolean",
                    "description": "Default to OAuth authentication"
                },
                "dnsEndPointType": {
                    "type": "string",
                    "description": "The DNS endpoint type",
                    "enum": [
                        "AzureDnsZone",
                        "Standard"
                    ]
                },
                "encryption": {
                    "type": "object",
                    "properties": {
                        "identity": {
                            "type": "object",
                            "properties": {
                                "federatedIdentityClientId": {
                                    "type": "string",
                                    "description": "The federated identity client ID"
                                },
                                "userAssignedIdentityId": {
                                    "type": "string",
                                    "description": "The user assigned identity ID"
                                }
                            }
                        },
                        "keySource": {
                            "type": "string",
                            "description": "The key source",
                            "enum": [
                                "Microsoft.Storage",
                                "Microsoft.KeyVault"
                            ]
                        },
                        "keyvaultproperties": {
                            "type": "object",
                            "properties": {
                                "keyname": {
                                    "type": "string",
                                    "description": "The key name"
                                },
                                "keyversion": {
                                    "type": "string",
                                    "description": "The key version"
                                },
                                "keyvaulturi": {
                                    "type": "string",
                                    "description": "The key vault URI"
                                }
                            }
                        },
                        "requireInfrastructureEncryption": {
                            "type": "boolean",
                            "description": "Require infrastructure encryption"
                        },
                        "services": {
                            "type": "object",
                            "properties": {
                                "blob": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "Enable blob encryption"
                                        },
                                        "lastenabledtime": {
                                            "type": "string",
                                            "description": "The last enabled time"
                                        }
                                    }
                                },
                                "file": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "Enable file encryption"
                                        },
                                        "lastenabledtime": {
                                            "type": "string",
                                            "description": "The last enabled time"
                                        }
                                    }
                                },
                                "queue": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "Enable queue encryption"
                                        },
                                        "lastenabledtime": {
                                            "type": "string",
                                            "description": "The last enabled time"
                                        }
                                    }
                                },
                                "table": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "Enable table encryption"
                                        },
                                        "lastenabledtime": {
                                            "type": "string",
                                            "description": "The last enabled time"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "immutableStorageWithVersioning" : {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable immutable storage with versioning"
                        },
                        "immutabilityPolicy" : {
                            "type": "object",
                            "properties": {
                                "immutabilityPeriodSinceCreationInDays": {
                                    "type": "number",
                                    "description": "The immutability period since creation in days"
                                },
                                "allowProtectedAppendWrites": {
                                    "type": "boolean",
                                    "description": "Allow protected append writes"
                                },
                                "state" : {
                                    "type": "string",
                                    "description": "The state of the immutability policy",
                                    "enum": [
                                        "Unlocked",
                                        "Locked"
                                    ]
                                
                                }
                            }
                        
                        }
                    }
                },
                "isHnsEnabled": {
                    "type": "boolean",
                    "description": "Is HNS enabled"
                },
                "isLocalBackupEnabled": {
                    "type": "boolean",
                    "description": "Is local backup enabled"
                },
                "isNfsV3Enabled": {
                    "type": "boolean",
                    "description": "Is NFS v3 enabled"
                },
                "isSfsEnabled": {
                    "type": "boolean",
                    "description": "Is SFS enabled"
                },
                "keypolicy" : {
                    "type": "object",
                    "properties": {
                        "keyExpirationPeriodInDays": {
                            "type": "number",
                            "description": "The key expiration period in days"
                        }
                    }
                },
                "largeFileSharesState": {
                    "type": "string",
                    "description": "The large file shares state",
                    "enum": [
                        "Disabled",
                        "Enabled"
                    ]
                },
                "minimumTlsVersion": {
                    "type": "string",
                    "description": "The minimum TLS version",
                    "enum": [
                        "TLS1_0",
                        "TLS1_1",
                        "TLS1_2"
                    ]
                },
                "networkAcls" : {
                    "type": "object",
                    "properties" : {
                        "bypass" : {
                            "type": "string",
                            "description": "The bypass",
                            "enum": [
                                "AzureServices",
                                "None"
                            ]
                        },
                        "defaultAction" : {
                            "type": "string",
                            "description": "The default action",
                            "enum": [
                                "Allow",
                                "Deny"
                            ]
                        },
                        "ipRules" : {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "action" : {
                                        "type": "string",
                                        "description": "The action",
                                        "enum": [
                                            "Allow",
                                            "Deny"
                                        ]
                                    },
                                    "ipAddressOrRange" : {
                                        "type": "string",
                                        "description": "The IP address or range"
                                    }
                                }
                            }
                        },
                        "virtualNetworkRules" : {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "action" : {
                                        "type": "string",
                                        "description": "The action",
                                        "enum": [
                                            "Allow",
                                            "Deny"
                                        ]
                                    },
                                    "virtualNetworkResourceId" : {
                                        "type": "string",
                                        "description": "The virtual network resource ID"
                                    }
                                }
                            }
                        }
                    }
                },
                "publicNetworkAccess" : {
                    "type": "string",
                    "description": "The public network access",
                    "enum": [
                        "Disabled",
                        "Enabled"
                    ]
                },
                "routingprefrence" : {
                    "type": "object",
                    "properties": {
                        "publishMicrosoftEndpoints" : {
                            "type": "boolean",
                            "description": "Publish Microsoft endpoints"
                        },
                        "publishInternetEndpoints" : {
                            "type": "boolean",
                            "description": "Publish internet endpoints"
                        },
                        "routingChoice" : {
                            "type": "string",
                            "description": "The routing choice",
                            "enum": [
                                "InternetRouting",
                                "MicrosoftRouting"
                            ]
                        }
                    }
                },
                "sasPolicy" : {
                    "type": "object",
                    "properties" : {
                        "expirationAction" : {
                            "type": "string",
                            "description": "The expiration action",
                            "enum": [
                                "Allow",
                                "Deny"
                            ]
                        },
                        "sasExpirationPeriod" : {
                            "type": "number",
                            "description": "The SAS expiration period in days"
                        }
                    }
                },
                "supportsHttpsTrafficOnly": {
                    "type": "boolean",
                    "description": "Supports HTTPS traffic only"
                }
            },                
            "required": [
                "name",
                "sku",
                "kind",
                "extendedLocation",
                "accessTier",
                "allowBlobPublicAccess",
                "allowSharedKeyAccess",
                "azureFilesIdentityBasedAuthentication",
                "customDomain",
                "defaultToOAuthAuthentication",
                "dnsEndPointType",
                "encryption",
                "immutableStorageWithVersioning",
                "isHnsEnabled",
                "isLocalBackupEnabled",
                "isNfsV3Enabled",
                "isSfsEnabled",
                "keypolicy",
                "largeFileSharesState",
                "minimumTlsVersion",
                "networkAcls",
                "publicNetworkAccess",
                "routingprefrence",
                "sasPolicy",
                "supportsHttpsTrafficOnly"
            ]
        },
        "blob_service": {
            "type": "object",
            "description": "",
            "properties": {
                "storage_account_parent": {
                    "type": "string",
                    "description": "The name of the Storage Account which should be used as the parent for this blob service."
                },
                "cors": {
                    "type": "object",
                    "properties": {
                        "cors_Rules": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/cors_rule"
                            },
                            "uniqueItems": true
                        }
                    }
                },
                "container_delete_retention_policy": {
                    "type": "object",
                    "properties": {
                        "days": {
                            "type": "number",
                            "description": "Specifies the number of days that the blob should be retained, between 1 and 365 days. Defaults to 7."
                        }
                    }
                },
                "delete_retention_policy": {
                    "type": "object",
                    "properties": {
                        "days": {
                            "type": "number",
                            "description": "Specifies the number of days that the blob should be retained, between 1 and 365 days. Defaults to 7."
                        }
                    }
                },
                "isversioning_enabled": {
                    "type": "boolean",
                    "description": "Specifies whether versioning is enabled for the blob service. Defaults to false."
                }
            },
            "required": [
                "storage_account_parent",
                "cors",
                "container_delete_retention_policy",
                "delete_retention_policy",
                "isversioning_enabled"
            ]
        },
        "access_policy": {
            "type": "object",
            "description": "",
            "properties": {
                "object_id": {
                    "type": "string",
                    "description": "Id of the principal in Azure."
                },
                "tenant_id": {
                    "type": "string",
                    "description": "Id of the tenant in Azure."
                },
                "key_permissions": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "Backup",
                            "Create",
                            "Decrypt",
                            "Delete",
                            "Encrypt",
                            "Get",
                            "Import",
                            "List",
                            "Purge",
                            "Recover",
                            "Restore",
                            "Sign",
                            "UnwrapKey",
                            "Update",
                            "Verify",
                            "WrapKey"
                        ],
                        "uniqueItems": true
                    }
                },
                "secret_permissions": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "Backup",
                            "Delete",
                            "Get",
                            "List",
                            "Purge",
                            "Recover",
                            "Restore",
                            "Set"
                        ],
                        "uniqueItems": true
                    }
                },
                "certificate_permissions": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "Create",
                            "Delete",
                            "Deleteissuers",
                            "Get",
                            "Getissuers",
                            "Import",
                            "List",
                            "Listissuers",
                            "Managecontacts",
                            "Manageissuers",
                            "Purge",
                            "Recover",
                            "Setissuers",
                            "Update"
                        ],
                        "uniqueItems": true
                    }
                }
            },
            "required": [
                "tenant_id",
                "object_id",
                "key_permissions",
                "secret_permissions",
                "certificate_permissions"
            ]
        },
        "cors_rule": {
            "type": "object",
            "description": "Block describing the rules for the cors configuration",
            "properties": {
                "allowed_headers": {
                    "type": "array",
                    "description": "A list of headers that are allowed to be a part of the cross-origin request.",
                    "items": {
                        "type": "string"
                    }
                },
                "allowed_methods": {
                    "type": "array",
                    "description": "A list of http methods that are allowed to be executed by the origin",
                    "items": {
                        "type": "string",
                        "enum": [
                            "DELETE",
                            "GET",
                            "HEAD",
                            "MERGE",
                            "POST",
                            "OPTIONS",
                            "PUT",
                            "PATCH"
                        ]
                    },
                    "uniqueItems": true
                },
                "allowed_origins": {
                    "type": "array",
                    "description": "A list of origin domains that will be allowed by CORS.",
                    "items": {
                        "type": "string"
                    }
                },
                "exposed_headers": {
                    "type": "array",
                    "description": "A list of response headers that are exposed to CORS clients.",
                    "items": {
                        "type": "string"
                    }
                },
                "max_age_in_seconds": {
                    "type": "number",
                    "description": "The number of seconds the client should cache a preflight response."
                }
            },
            "required": [
                "allowed_headers",
                "allowed_methods",
                "allowed_origins",
                "exposed_headers",
                "exposed_headers",
                "max_age_in_seconds"
            ]
        },
        "storage_container": {
            "type": "object",
            "description": "",
            "properties": {
                "name": {
                    "type": "string",
                    "pattern": "(?=.{3,24}$)^[a-z0-9]+$",
                    "description": "The name of the Container which should be created within the Storage Account."
                },
                "storage_account_parent": {
                    "type": "string",
                    "description": "The name of the Storage Account which should be used as the parent for this Container."
                },
                "defaultEncryptionScope": {
                    "type": "string",
                    "description": "The default encryption scope"
                },
                "denyEncryptionScopeOverride": {
                    "type": "boolean",
                    "description": "Deny encryption scope override"
                },
                "enableNfsV3AllSquash": {
                    "type": "boolean",
                    "description": "Enable NFS v3 all squash"
                },
                "enableNfsV3RootSquash": {
                    "type": "boolean",
                    "description": "Enable NFS v3 root squash"
                },
                "publicAccess": {
                    "type": "string",
                    "description": "The public access of the storage container",
                    "enum": [
                        "Blob",
                        "Container",
                        "None"
                    ]
                }
            },
            "required": [
                "name",
                "storage_account_parent",
                "defaultEncryptionScope",
                "denyEncryptionScopeOverride",
                "enableNfsV3AllSquash",
                "enableNfsV3RootSquash",
                "publicAccess"
            ]
        },
        "firewall_rule": {
            "type": "object",
            "description": "",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the firewall rule."
                },
                "start_ip_address": {
                    "type": "string",
                    "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}($|/[1-9]$|/[1-2][0-9]$|/3[0-2]$)"
                },
                "end_ip_address": {
                    "type": "string",
                    "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}($|/[1-9]$|/[1-2][0-9]$|/3[0-2]$)"
                }
            },
            "required": [
                "name",
                "start_ip_address",
                "end_ip_address"
            ]
        }
    }
}